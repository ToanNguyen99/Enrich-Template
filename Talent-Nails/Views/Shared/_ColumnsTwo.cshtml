
@{
    Layout = "~/Views/Shared/_Root.cshtml";
}
@{
    var currentCategoryId = 0;
    var currentProductId = 0;


}

@if (IsSectionDefined("Breadcrumb"))
{
    @section Breadcrumb {
        @RenderSection("Breadcrumb")
    }
}   

<div class="side-2">
    @if (IsSectionDefined("left"))
    {
        @RenderSection("left")
    }
    else
    {
        @*@await  Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.LeftSideColumnBefore })*@
        @Html.Action("CategoryNavigation", "Widget", new { id = Model.Store.Id, currentCategoryId = currentCategoryId, currentProductId = currentProductId })
        @*@await Component.InvokeAsync("CategoryNavigation", new { currentCategoryId = currentCategoryId, currentProductId = currentProductId })*@
        @*@await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.LeftSideColumnAfterCategoryNavigation })*@
        @*@await Component.InvokeAsync("ManufacturerNavigation", new { currentManufacturerId = currentManufacturerId })
        @await Component.InvokeAsync("VendorNavigation")
        @await Component.InvokeAsync("RecentlyViewedProductsBlock", new { productThumbPictureSize = 64 })
        @await Component.InvokeAsync("PopularProductTags")
        @await Component.InvokeAsync("PollBlock", new { systemKeyword = "LeftColumnPoll" })*@
        @*@await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.LeftSideColumnAfter })*@
    }




</div>

<div class="center-2">
    
    @RenderBody()
</div>